#include <bits/stdc++.h>

#define endl '\n'
using namespace std;

struct Node{
	int name;
	int color=2;
	vector<int> children;
};



int main(){
	ios::sync_with_stdio(0);cin.tie(0);
	int n,edges,a,b, color;
	Node node;
	while(cin >> n){
		if(n==0) break;
		cin >> edges;
		vector<Node> graph;
		graph.resize(n);
		for(int i=0;i<n;i++) graph[i].name=i;
		bool res=true;	
		while(edges--){
			cin >> a >> b;
			graph[a].children.push_back(b);
			graph[b].children.push_back(a);
		}
		stack<pair<int,int>> stack;
		stack.push(make_pair(0,1));
		while(!stack.empty() && res){
			node = graph[stack.top().first];
			color = stack.top().second;
			stack.pop();
			if(node.color!=2 && node.color!=color){
				res=false;
				break;
			}
			node.color=color;
			for(int i:node.children){
				Node no = graph[i];
				if(no.color==color){
					res=false;
					break;
				}else if(no.color==2)
				stack.push(make_pair(no.name,(color+1)%2));
			}
		}
		
		if(!res) cout << "NOT ";
		cout << "BICOLORABLE." << endl;
	}
	
	return 0;
}
